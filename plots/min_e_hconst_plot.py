import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
from svgpathtools import svg2paths
from svgpath2mpl import parse_path
import numpy as np
from plot import interp_data, marker

plt.rcParams["font.family"] = "Times New Roman"

num = 40
# trajectory data

dtu = 1.68061329
eu = 11.4
timeu = np.arange(0, num*dtu, dtu)

xu = np.array([   0.        ,   7.40047841,  28.52834412,  62.64472609, 109.32678126,
  169.76486076, 246.57342672, 338.15704828, 442.38121739, 554.13706133,
  668.35707761, 782.91204035, 897.2385848 ,1011.22815756,1125.00177113,
 1238.56370956,1351.8938344 ,1464.98525838,1577.84408385,1690.48934536,
 1802.95138668,1915.26735696,2027.47718121,2139.61762389,2251.71817257,
 2363.79794681,2475.86266329,2587.90217977,2699.8873586 ,2811.76486968,
 2923.45022835,3034.81830295,3145.69119873,3255.82362102,3364.88530634,
 3472.44378832,3577.97267762,3680.98458341,3781.66706786,3881.88599311])
zu = np.array([300.        ,295.1504906 ,278.21904913,248.98602771,210.92436291,
 169.60414569,130.83157201, 95.78815083, 71.44742021, 61.50830629,
  62.52046409, 67.99489646, 75.26415027, 82.90610795, 90.15944009,
  97.44521368,104.81769521,112.23107412,119.62856205,126.95289638,
 134.1550756 ,141.20465055,148.08973764,154.82351088,161.43689708,
 167.97448424,174.49338482,181.06065439,187.75647685,194.68109709,
 201.9602869 ,209.75252669,218.25375932,227.69852143,238.35706255,
 250.51486546,264.35634101,279.56414637,293.61929974,300.00027777]) - 300
au = np.array([-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.34906585,
 -0.34906585,-0.22944776,-0.09006426, 0.01702444, 0.04831819, 0.06324071,
  0.06843118, 0.06202238, 0.06385837, 0.06535045, 0.06637646, 0.06690377,
  0.06689903, 0.06635754, 0.06546876, 0.06432984, 0.06322013, 0.06229487,
  0.06169151, 0.0615609 , 0.06201306, 0.06318554, 0.06530946, 0.06866701,
  0.07364442, 0.08071966, 0.09044155, 0.10346209, 0.12045967, 0.14188127,
  0.16492294, 0.17878315, 0.11591539,-0.03386699])




dt3 = 1.32018257
e3 = 11.96092104
time3 = np.arange(0, num*dt3, dt3)

x3 = np.array([   0.        ,   4.80021459,  18.68731399,  41.79115783,  74.2384107 ,
  115.96114871, 167.64960869, 229.58295864, 300.08259401, 375.64400555,
  453.08667713, 531.46594224, 611.11676987, 691.99180001, 774.00725659,
  857.15102937, 941.41244978,1026.71485853,1112.85109589,1199.64043118,
 1286.91820811,1374.53000142,1462.35979694,1550.30390089,1638.30798979,
 1726.34167126,1814.36687092,1902.34663491,1990.24044041,2077.9992075 ,
 2165.54984274,2252.80191451,2339.59384956,2425.71469122,2510.83580467,
 2594.52173964,2676.36246492,2756.19822383,2834.72215494,2913.42801032])
z3 = np.array([300.        ,297.63683326,289.42621811,274.8764559 ,253.96393223,
 228.04404776,200.20105996,174.95053936,157.43487965,150.00246594,
 150.00496052,150.93526987,150.08182734,150.06691965,150.0270023 ,
 150.02744322,150.02276467,150.51673634,152.0322662 ,154.33036898,
 157.42168499,161.23675163,165.62036362,170.50860652,175.67008229,
 181.0042729 ,186.53335598,192.25081718,198.17480921,204.35352985,
 210.88832499,217.8751215 ,225.60290288,234.30611737,244.41712999,
 256.26925856,269.73744526,283.84547391,295.46192064,299.99997957]) - 300
a3 = np.array([-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.34906585,
 -0.30214211,-0.16886887,-0.03203826, 0.06662647, 0.05950243,-0.00217674,
  0.03197993, 0.01848206, 0.01858488, 0.01309384, 0.01503531, 0.0287952 ,
  0.03390276, 0.04174499, 0.04944416, 0.05420438, 0.06044052, 0.06276058,
  0.0640306 , 0.06649162, 0.06857022, 0.07118903, 0.07400984, 0.07913639,
  0.08389603, 0.09436439, 0.10646463, 0.12563212, 0.15214005, 0.17931189,
  0.20235848, 0.18837329, 0.08801991,-0.04095979])



dt2 = 1.17554416
e2 = 13.62540522
time2 = np.arange(0, num*dt2, dt2)

x2 = np.array([   0.        ,   4.00553051,  15.33841931,  33.84612333,  59.98646935,
   94.44121147, 137.69603569, 188.99440383, 246.07097188, 306.30351307,
  367.8895851 , 430.35406643, 493.87632031, 558.51977598, 624.2156311 ,
  690.92171398, 758.60530325, 827.27844125, 896.93322445, 967.54547268,
 1039.11194051,1111.58524112,1185.00349106,1259.35213468,1334.57719931,
 1410.5798008 ,1487.17646991,1564.17230899,1641.4366741 ,1718.78703755,
 1796.0866866 ,1873.1848284 ,1949.86031648,2025.88815712,2100.9091547 ,
 2174.5901747 ,2246.69713028,2317.29243189,2387.13118781,2457.23839846])
z2 = np.array([300.        ,298.69891513,293.32107639,282.85940809,267.75103113,
 249.33806499,230.58203086,214.85607647,204.44380369,200.00325808,
 200.00473499,200.76550021,200.46627968,200.11261367,200.02202632,
 200.02633192,200.12723609,200.04888677,200.0208711 ,200.02629291,
 200.02645344,200.19903966,200.02516548,200.01579409,200.2559042 ,
 201.08880515,202.93363728,205.74108505,209.26059031,213.74276801,
 218.9680088 ,225.03108616,232.18398707,240.49537817,250.40716138,
 261.81789184,274.3261746 ,286.75076878,296.29131758,300.00002632]) - 300
a2 = np.array([-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.29821458,
 -0.18654376,-0.0693986 , 0.03847202, 0.1059478 , 0.08661546, 0.04179563,
  0.04683059, 0.04946245, 0.0432792 , 0.04435874, 0.03308314, 0.03249191,
  0.03065226, 0.0231938 , 0.03023146, 0.01323846, 0.01782844, 0.0166792 ,
  0.02178333, 0.03508929, 0.04808257, 0.05165166, 0.06732587, 0.0748148 ,
  0.08470944, 0.10247737, 0.11612009, 0.1439442 , 0.16950565, 0.19196556,
  0.20633769, 0.16835954, 0.07775632,-0.04364114])



dt1 = 1.14009052
e1 = 16.77843311
time1 = np.arange(0, num*dt1, dt1)

x1 = np.array([   0.        ,   3.87379722,  15.29756251,  34.08767236,  59.69266075,
   91.85397022, 130.25507733, 173.69524038, 220.83380196, 270.61278575,
  321.9695407 , 374.61553677, 428.46862319, 483.44632502, 539.4896686 ,
  596.55658013, 654.61456732, 713.63723693, 773.60170353, 834.4889696 ,
  896.28379552, 958.9735295 ,1022.53374309,1086.96454716,1152.26225564,
 1218.40959546,1285.39808988,1353.21526713,1421.8546603 ,1491.31285332,
 1561.57456192,1632.62826873,1704.22760108,1775.95548658,1847.37374069,
 1918.07785505,1987.75419905,2056.28929182,2124.09754021,2192.12505998])
z1 = np.array([300.        ,299.10375792,296.27611272,290.76785478,281.54849191,
 270.63785713,261.02978252,254.46914675,251.07009805,250.00458169,
 250.00424241,250.03956932,250.01723187,250.01639028,250.02014673,
 250.02106258,250.02216064,250.02179524,250.02377461,250.02721757,
 250.02341824,250.02687928,250.08473896,250.05806467,250.0287162 ,
 250.03526263,250.0314908 ,250.05283112,250.04427234,250.02771743,
 250.02457574,250.18450785,251.91555599,255.70416718,261.57732979,
 269.3468909 ,278.61215423,288.5076308 ,296.76253826,300.00001521]) - 300
a1 = np.array([-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.22086772,-0.15159039,
 -0.03776832, 0.06080153, 0.12805662, 0.14598974, 0.11481245, 0.1046141 ,
  0.09789096, 0.09018037, 0.08348153, 0.077606  , 0.07201262, 0.06703162,
  0.06228392, 0.05782899, 0.05284041, 0.05189462, 0.04441826, 0.04140618,
  0.03933887, 0.0348268 , 0.03294422, 0.02906214, 0.0251777 , 0.02546149,
  0.01563967, 0.04442393, 0.07342369, 0.1031281 , 0.13199769, 0.15705005,
  0.17501676, 0.16073233, 0.07082049,-0.03831483])


dt0 = 1.60674882
e0 = 27.02542268
time0 = np.arange(0, num*dt0, dt0)

x0 = np.array([   0.        ,   3.63835481,  14.57923107,  32.91304799,  58.8970095 ,
   92.77315157, 134.73675516, 183.951501  , 238.18812484, 297.1601255 ,
  360.93456224, 429.16362078, 500.20018895, 573.33267651, 648.16040915,
  724.48980361, 802.15970495, 881.06413355, 961.0673694 ,1042.05994484,
 1124.058995  ,1207.0148182 ,1290.87483969,1375.57604987,1461.09117993,
 1547.40241154,1634.42844154,1722.04572038,1810.40342177,1899.61432153,
 1989.61433288,2080.1927351 ,2171.52659156,2263.60575539,2356.18983779,
 2449.45373439,2543.53619895,2638.34000343,2733.73520232,2829.80474904])
z0 = np.array([300.        ,299.95918798,299.90811296,299.90630213,299.90919587,
 299.91173602,299.91161603,299.91523816,299.92133261,299.91835904,
 299.91841675,299.91969713,299.92231812,299.92519126,299.92428405,
 299.93283246,299.93246744,299.9298992 ,299.96597816,300.0431834 ,
 299.94730195,299.94143385,299.93343716,299.99215816,299.93398014,
 299.9338448 ,300.31905067,300.83527725,300.59541992,300.13047415,
 300.09640167,300.56388215,300.08225508,300.1794937 ,300.85800041,
 300.49297031,299.95598314,299.93871005,300.18255742,300.00000062]) - 300
a0 = np.array([-0.00350983,-0.02796492,-0.01909858,-0.03127751,-0.03658836,-0.04772383,
 -0.03601881, 0.153243  , 0.14896802, 0.16195496, 0.15620741, 0.14142419,
  0.1252575 , 0.11347863, 0.10501142, 0.09738295, 0.09128034, 0.08573653,
  0.08431665, 0.07426643, 0.07435303, 0.06882821, 0.06834748, 0.06234999,
  0.05955506, 0.0618653 , 0.06658837, 0.04862216, 0.0448166 , 0.0444294 ,
  0.06035225, 0.03292108, 0.04056879, 0.05575564, 0.03145297, 0.02871042,
  0.03364606, 0.03945627, 0.02525488, 0.03225991])




# interpolate the data
num = 3
x_prime_u, y_prime_u, a_prime_u, t_prime_u = interp_data(x=xu, y=zu, a=au, t=timeu, num=num)
x_prime_3, y_prime_3, a_prime_3, t_prime_3 = interp_data(x=x3, y=z3, a=a3, t=time3, num=num)
x_prime_2, y_prime_2, a_prime_2, t_prime_2 = interp_data(x=x2, y=z2, a=a2, t=time2, num=num)
x_prime_1, y_prime_1, a_prime_1, t_prime_1 = interp_data(x=x1, y=z1, a=a1, t=time1, num=num)
x_prime_0, y_prime_0, a_prime_0, t_prime_0 = interp_data(x=x0, y=z0, a=a0, t=time0, num=num)


fig = plt.figure(figsize=(14,3))
plt.xlim([xu[0],xu[-1]])
plt.ylim([-250,50])
fontsize = 16

plt.axhline(y=0, color='lavender', linestyle='dotted', linewidth=2, alpha=1, zorder=0, label = '_nolegend_')

plt.axhline(y=-150, color='black', linestyle='dashed', linewidth=2, alpha=0.35, zorder=1, label = '_nolegend_')
plt.axhline(y=-100, color='black', linestyle='dashed', linewidth=2, alpha=0.35, zorder=1, label = '_nolegend_')
plt.axhline(y=-50, color='black', linestyle='dashed', linewidth=2, alpha=0.35, zorder=1, label = '_nolegend_')

for i in range(num):
    coef = 1.5
    new_marker_u = marker.transformed(mpl.transforms.Affine2D().rotate_deg(180 + coef*np.rad2deg(a_prime_u[i])))
    new_marker_3 = marker.transformed(mpl.transforms.Affine2D().rotate_deg(180 + coef*np.rad2deg(a_prime_3[i])))
    new_marker_2 = marker.transformed(mpl.transforms.Affine2D().rotate_deg(180 + coef*np.rad2deg(a_prime_2[i])))
    new_marker_1 = marker.transformed(mpl.transforms.Affine2D().rotate_deg(180 + coef*np.rad2deg(a_prime_1[i])))
    new_marker_0 = marker.transformed(mpl.transforms.Affine2D().rotate_deg(180 + coef*np.rad2deg(a_prime_0[i])))

    plt.scatter(x_prime_u[i], y_prime_u[i], marker=new_marker_u, s=5000, c='lightgray', zorder=3, edgecolor='black', linewidth=1, alpha=1, label = '_nolegend_')
    plt.scatter(x_prime_3[i], y_prime_3[i], marker=new_marker_3, s=5000, c='lightblue', zorder=3, edgecolor='black', linewidth=1, alpha=1, label = '_nolegend_')
    plt.scatter(x_prime_2[i], y_prime_2[i], marker=new_marker_2, s=5000, c='thistle', zorder=3, edgecolor='black', linewidth=1, alpha=1, label = '_nolegend_')
    plt.scatter(x_prime_1[i], y_prime_1[i], marker=new_marker_1, s=5000, c='plum', zorder=3, edgecolor='black', linewidth=1, alpha=1, label = '_nolegend_')
    plt.scatter(x_prime_0[i], y_prime_0[i], marker=new_marker_0, s=5000, c='palevioletred', zorder=3, edgecolor='black', linewidth=1, alpha=1, label = '_nolegend_')




plt.plot(xu, zu, c='black', alpha=1, linewidth=3, zorder=1)
plt.plot(x3, z3, c='blue', alpha=1, linewidth=3, zorder=1)
plt.plot(x2, z2, c='blueviolet', alpha=1, linewidth=3, zorder=1)
plt.plot(x1, z1, c='orchid', alpha=1, linewidth=3, zorder=1)
plt.plot(x0, z0, c='crimson', alpha=1, linewidth=3, zorder=1)


plt.xlabel('Horizontal Position (m)', fontsize=fontsize)
plt.ylabel('Altitude (m)', fontsize=fontsize)

plt.xticks(fontsize=fontsize - 2)
plt.yticks(fontsize=fontsize - 2)

plt.text(400,20,'27.1 MJ',fontsize=fontsize-2,c='black',bbox=dict(facecolor='white',alpha=1,edgecolor='crimson',boxstyle='round'))
plt.text(400,-30,'16.8 MJ',fontsize=fontsize-2,c='black',bbox=dict(facecolor='white',alpha=1,edgecolor='orchid',boxstyle='round'))
plt.text(400,-80,'13.6 MJ',fontsize=fontsize-2,c='black',bbox=dict(facecolor='white',alpha=1,edgecolor='blueviolet',boxstyle='round'))
plt.text(400,-130,'11.9 MJ',fontsize=fontsize-2,c='black',bbox=dict(facecolor='white',alpha=1,edgecolor='steelblue',boxstyle='round'))
plt.text(400,-180,'11.4 MJ',fontsize=fontsize-2,c='black',bbox=dict(facecolor='white',alpha=1,edgecolor='black',boxstyle='round'))


plt.legend(['unconstrained', '150 m constraint', '100 m constraint', '50 m constraint', '0 m constraint'], frameon=True, fontsize=fontsize - 3, loc='lower right')

plt.savefig('min_energy_hconstrained.pdf', transparent=True, bbox_inches="tight")
plt.show()