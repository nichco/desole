import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
from svgpathtools import svg2paths
from svgpath2mpl import parse_path
import numpy as np
from plot import interp_data, marker

plt.rcParams["font.family"] = "Times New Roman"


# trajectory data
"""
num = 40
dt = 1.8505198
time = np.arange(0, num*dt, dt)

x = np.array([   0.        ,   4.93363012,  19.76714062,  44.74531333,  80.1972258 ,126.44611437, 182.40485269, 245.08427937, 314.0702928 , 389.23950401,
  469.29365755, 552.41396744, 637.85569762, 725.22633616, 814.27304883,904.81513642, 996.71647165,1089.8693221 ,1184.18605183,1279.59608939,
 1376.04034248,1473.46897854,1571.83812994,1671.11017407,1771.2515061 ,1872.23125725,1974.0236218 ,2076.60439152,2179.95100355,2284.04401685,
 2388.86397317,2494.39601408,2600.62332485,2707.53224088,2815.10993615,2923.34298196,3032.21940991,3141.7274905 ,3251.86191901,3362.59402091])
z = np.array([300.        ,299.94943048,299.90583684,299.90694906,299.91001999,299.91137664,299.91299863,299.92218962,299.91676936,299.91803478,
 299.91944718,299.92384732,299.92640579,299.92902431,299.93035724,299.93146003,299.93238597,299.9336559 ,299.93412458,299.93467754,
 299.9362425 ,299.93628653,299.93754246,299.93766159,299.93783212,299.93942308,299.93841005,299.9383225 ,299.93864399,299.9388921 ,
 299.94289783,299.94021248,299.94332509,299.94066478,299.93898168,299.9394884 ,299.94183879,299.93943267,299.9398359 ,300.00000002]) - 300
a = np.array([-0.01350389,-0.03104296,-0.02994083,-0.03743226,-0.04973968,-0.03845421,0.14958518, 0.15123054, 0.16194037, 0.15171894, 0.13355846, 0.11829502,
  0.10777767, 0.09956571, 0.09286108, 0.08716222, 0.08222364, 0.07782967,0.07388016, 0.07033121, 0.06698612, 0.06397175, 0.06110693, 0.05842687,
  0.05596889, 0.05354298, 0.05130862, 0.04920144, 0.04709851, 0.04529791,0.04323155, 0.04161012, 0.03976235, 0.03811269, 0.03656443, 0.03495403,0.03365892, 0.03154088, 0.03183971, 0.02871176])
"""

num = 40
dt = 1.60674882
e = 27.02542268
time = np.arange(0, num*dt, dt)

x = np.array([   0.        ,   3.63835481,  14.57923107,  32.91304799,  58.8970095 ,
   92.77315157, 134.73675516, 183.951501  , 238.18812484, 297.1601255 ,
  360.93456224, 429.16362078, 500.20018895, 573.33267651, 648.16040915,
  724.48980361, 802.15970495, 881.06413355, 961.0673694 ,1042.05994484,
 1124.058995  ,1207.0148182 ,1290.87483969,1375.57604987,1461.09117993,
 1547.40241154,1634.42844154,1722.04572038,1810.40342177,1899.61432153,
 1989.61433288,2080.1927351 ,2171.52659156,2263.60575539,2356.18983779,
 2449.45373439,2543.53619895,2638.34000343,2733.73520232,2829.80474904])
z = np.array([300.        ,299.95918798,299.90811296,299.90630213,299.90919587,
 299.91173602,299.91161603,299.91523816,299.92133261,299.91835904,
 299.91841675,299.91969713,299.92231812,299.92519126,299.92428405,
 299.93283246,299.93246744,299.9298992 ,299.96597816,300.0431834 ,
 299.94730195,299.94143385,299.93343716,299.99215816,299.93398014,
 299.9338448 ,300.31905067,300.83527725,300.59541992,300.13047415,
 300.09640167,300.56388215,300.08225508,300.1794937 ,300.85800041,
 300.49297031,299.95598314,299.93871005,300.18255742,300.00000062]) - 300
a = np.array([-0.00350983,-0.02796492,-0.01909858,-0.03127751,-0.03658836,-0.04772383,
 -0.03601881, 0.153243  , 0.14896802, 0.16195496, 0.15620741, 0.14142419,
  0.1252575 , 0.11347863, 0.10501142, 0.09738295, 0.09128034, 0.08573653,
  0.08431665, 0.07426643, 0.07435303, 0.06882821, 0.06834748, 0.06234999,
  0.05955506, 0.0618653 , 0.06658837, 0.04862216, 0.0448166 , 0.0444294 ,
  0.06035225, 0.03292108, 0.04056879, 0.05575564, 0.03145297, 0.02871042,
  0.03364606, 0.03945627, 0.02525488, 0.03225991])




# interpolate the data
num = 7
x_prime, y_prime, a_prime, t_prime = interp_data(x=x, y=z, a=a, t=time, num=num)


fig = plt.figure(figsize=(7,3))
plt.xlim([x[0],x[-1]])
plt.ylim([-300,300])
fontsize = 16

for i in range(num):
    coef = 2
    new_marker = marker.transformed(mpl.transforms.Affine2D().rotate_deg(180 + coef*np.rad2deg(a_prime[i])))
    plt.scatter(x_prime[i], y_prime[i], marker=new_marker, s=5000, c='lavender', zorder=3, edgecolor='black', linewidth=1, alpha=1, label = '_nolegend_')

plt.plot(x, z, c='darkviolet', alpha=1, linewidth=3, zorder=4, label = '_nolegend_')
# plt.scatter(x, z, marker='o', s=30, c='white', zorder=4, edgecolor='black')

x_p = np.linspace(x[0],x[-1],num)
plt.fill_between(x_p, -300, 0, alpha=1, color='whitesmoke', hatch='//', edgecolor='lightgray')

plt.xlabel('Horizontal Position (m)', fontsize=fontsize)
plt.ylabel('Altitude (m)', fontsize=fontsize)

plt.xticks(fontsize=fontsize - 2)
plt.yticks(fontsize=fontsize - 2)

plt.legend(['min altitude constraint'], frameon=False, fontsize=fontsize - 2, loc='upper left')

plt.savefig('tc2.pdf', transparent=True, bbox_inches="tight")
plt.show()