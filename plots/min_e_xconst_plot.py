import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
from svgpathtools import svg2paths
from svgpath2mpl import parse_path
import numpy as np
from plot import interp_data, marker

plt.rcParams["font.family"] = "Times New Roman"

num = 40
# trajectory data

dtu = 1.68061329
timeu = np.arange(0, num*dtu, dtu)


xu = np.array([   0.        ,   7.40047841,  28.52834412,  62.64472609, 109.32678126,
  169.76486076, 246.57342672, 338.15704828, 442.38121739, 554.13706133,
  668.35707761, 782.91204035, 897.2385848 ,1011.22815756,1125.00177113,
 1238.56370956,1351.8938344 ,1464.98525838,1577.84408385,1690.48934536,
 1802.95138668,1915.26735696,2027.47718121,2139.61762389,2251.71817257,
 2363.79794681,2475.86266329,2587.90217977,2699.8873586 ,2811.76486968,
 2923.45022835,3034.81830295,3145.69119873,3255.82362102,3364.88530634,
 3472.44378832,3577.97267762,3680.98458341,3781.66706786,3881.88599311])
zu = np.array([300.        ,295.1504906 ,278.21904913,248.98602771,210.92436291,
 169.60414569,130.83157201, 95.78815083, 71.44742021, 61.50830629,
  62.52046409, 67.99489646, 75.26415027, 82.90610795, 90.15944009,
  97.44521368,104.81769521,112.23107412,119.62856205,126.95289638,
 134.1550756 ,141.20465055,148.08973764,154.82351088,161.43689708,
 167.97448424,174.49338482,181.06065439,187.75647685,194.68109709,
 201.9602869 ,209.75252669,218.25375932,227.69852143,238.35706255,
 250.51486546,264.35634101,279.56414637,293.61929974,300.00027777]) - 300
au = np.array([-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.34906585,
 -0.34906585,-0.22944776,-0.09006426, 0.01702444, 0.04831819, 0.06324071,
  0.06843118, 0.06202238, 0.06385837, 0.06535045, 0.06637646, 0.06690377,
  0.06689903, 0.06635754, 0.06546876, 0.06432984, 0.06322013, 0.06229487,
  0.06169151, 0.0615609 , 0.06201306, 0.06318554, 0.06530946, 0.06866701,
  0.07364442, 0.08071966, 0.09044155, 0.10346209, 0.12045967, 0.14188127,
  0.16492294, 0.17878315, 0.11591539,-0.03386699])




dt3 = 1.34693731
time3 = np.arange(0, num*dt3, dt3)

x3 = np.array([   0.        ,   4.85686631,  18.94416675,  41.92115726,  73.1855485 ,
  112.6320688 , 161.08974252, 220.01301196, 288.93531515, 366.95231602,
  452.23808563, 542.00239807, 633.49542532, 724.85851024, 815.57896133,
  905.71684712, 995.4499276 ,1084.91826131,1174.21206463,1263.40042249,
 1352.5250535 ,1441.60566117,1530.64408106,1619.64829407,1708.61804722,
 1797.54308501,1886.40875456,1975.2087277 ,2063.93464971,2152.55186077,
 2241.02500734,2329.27508507,2417.1443447 ,2504.3902208 ,2590.67635265,
 2675.57923772,2758.68787256,2839.85619604,2919.78737993,2999.99997155])
z3 = np.array([300.        ,297.12840262,287.4950071 ,270.10363157,245.53182415,
 215.77881411,183.75954945,152.75218103,123.6665481 , 99.22330516,
  82.61259159, 75.13932233, 76.18494221, 83.10876295, 92.13349319,
 101.3286776 ,109.89899693,117.79498714,125.18982083,132.2103654 ,
 139.0007488 ,145.68071926,152.33565722,158.95387758,165.57369308,
 172.2408057 ,178.97243086,185.73230124,192.54282769,199.51639052,
 206.67905139,214.21106613,222.4272206 ,231.69565929,242.38981005,
 254.76471652,268.69971231,283.19718213,295.17793722,300.00001879]) - 300
a3 = np.array([-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.34906585,
 -0.34906585,-0.34906585,-0.27890153,-0.17852384,-0.07615827, 0.0167374 ,
  0.08630925, 0.10372764, 0.10479672, 0.09717992, 0.09021039, 0.08587332,
  0.08211464, 0.08008382, 0.07904287, 0.0795019 , 0.07900183, 0.07918635,
  0.07993204, 0.08111426, 0.08163778, 0.08185617, 0.08469844, 0.0866783 ,
  0.09100244, 0.09955334, 0.11308054, 0.13215256, 0.15692566, 0.18311962,
  0.20464157, 0.18999229, 0.09458922,-0.01330028])



dt2 = 0.96173694
e2 = 11.77561416
time2 = np.arange(0, num*dt2, dt2)

x2 = np.array([   0.        ,   2.53360627,   9.85880165,  21.96347   ,  38.80767887,
   60.16930035,  85.84493736, 115.89760677, 150.75323675, 191.00770129,
  236.67317218, 287.49772873, 343.23604441, 403.0912025 , 465.93911929,
  530.539883  , 595.76450192, 660.75621228, 725.06344607, 788.74171457,
  851.99275173, 914.94111488, 977.66689546,1040.22510591,1102.65152141,
 1164.96591152,1227.17315358,1289.26258582,1351.20561157,1412.95126967,
 1474.4198397 ,1535.49666156,1596.03225327,1655.85568223,1714.80454576,
 1772.76882906,1829.77486052,1886.20573145,1942.77390126,1999.99992823])
z2 = np.array([300.        ,298.6463642 ,294.19856968,286.35040231,274.87348821,
 259.79931068,241.52076567,220.80634327,198.82754818,176.91407837,
 155.59213896,135.50610213,118.42512393,105.64996695, 97.98658999,
  95.62381556, 98.18413842,104.82990969,114.195258  ,124.38754832,
 134.27784632,143.58457232,152.30961183,160.54897807,168.42712353,
 176.06828452,183.58953936,191.10467617,198.73279473,206.60888093,
 214.89251132,223.76493433,233.39971715,243.90391196,255.25126652,
 267.23279382,279.29973969,290.02204533,297.31003339,300.0000111 ]) - 300
a2 = np.array([-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.34906585,
 -0.34906585,-0.34906585,-0.34906585,-0.34906585,-0.32606395,-0.25300459,
 -0.17691378,-0.094814  ,-0.01541509, 0.05668532, 0.11682219, 0.16083719,
  0.16670529, 0.15702758, 0.14860919, 0.1409093 , 0.13485716, 0.13065325,
  0.12821729, 0.12746971, 0.1284496 , 0.13136246, 0.13662026, 0.14484459,
  0.15671018, 0.17244195, 0.19112982, 0.21055698, 0.22732882, 0.23741101,
  0.22067169, 0.14319626, 0.05921549,-0.01880338])



dt1 = 0.56216117
e1 = 13.08474291
time1 = np.arange(0, num*dt1, dt1)

x1 = np.array([0.00000000e+00,9.22354383e-01,3.50751295e+00,7.72385109e+00,
 1.35789167e+01,2.10848952e+01,3.02539767e+01,4.11003837e+01,
 5.36455459e+01,6.79176633e+01,8.39378583e+01,1.01755571e+02,
 1.21481091e+02,1.43259260e+02,1.67209595e+02,1.93369861e+02,
 2.21787997e+02,2.52394850e+02,2.85004892e+02,3.19322966e+02,
 3.54966799e+02,3.91499325e+02,4.28467074e+02,4.65438392e+02,
 5.02038984e+02,5.37978231e+02,5.73116017e+02,6.07628508e+02,
 6.41665736e+02,6.75303095e+02,7.08577392e+02,7.41505752e+02,
 7.74095164e+02,8.06347232e+02,8.38260536e+02,8.69917303e+02,
 9.01671897e+02,9.33839854e+02,9.66596410e+02,9.99999991e+02])
z1 = np.array([300.        ,299.64520039,298.36022224,296.00951411,292.55503361,
 287.96237519,282.18891409,275.19138251,266.94429202,257.46934887,
 246.86917144,235.33116477,223.12702189,210.56367133,197.92219795,
 185.42388119,173.61868916,163.05433955,154.24826849,147.64495474,
 143.58479009,142.27899013,143.79960814,148.08154251,154.92824676,
 164.03680901,174.89561777,186.53088291,198.39234825,210.24170464,
 221.97302106,233.53811478,244.91417428,256.0894645 ,267.05696132,
 277.60184238,286.85895306,294.01458839,298.49247387,300.00000137]) - 300
a1 = np.array([-3.49065850e-01,-3.49065850e-01,-3.49065850e-01,-3.49065850e-01,
 -3.49065850e-01,-3.49065850e-01,-3.49065850e-01,-3.49065850e-01,
 -3.49065850e-01,-3.49065850e-01,-3.49065850e-01,-3.49065850e-01,
 -3.49065850e-01,-3.49065850e-01,-3.49065850e-01,-2.97442786e-01,
 -2.44709940e-01,-1.81981776e-01,-1.14264674e-01,-4.28723331e-02,
  2.98885896e-02, 1.02157418e-01, 1.72059567e-01, 2.37643688e-01,
  2.95712654e-01, 3.49065850e-01, 3.49065850e-01, 3.49065850e-01,
  3.49065850e-01, 3.49065850e-01, 3.49065850e-01, 3.49065850e-01,
  3.49065850e-01, 3.49065850e-01, 3.49065850e-01, 2.83447789e-01,
  1.96991997e-01, 9.87666634e-02,-2.30753922e-04,-0.92162727e-02])




# interpolate the data
num = 4
x_prime_u, y_prime_u, a_prime_u, t_prime_u = interp_data(x=xu, y=zu, a=au, t=timeu, num=num)
x_prime_3, y_prime_3, a_prime_3, t_prime_3 = interp_data(x=x3, y=z3, a=a3, t=time3, num=num)
x_prime_2, y_prime_2, a_prime_2, t_prime_2 = interp_data(x=x2, y=z2, a=a2, t=time2, num=num)
x_prime_1, y_prime_1, a_prime_1, t_prime_1 = interp_data(x=x1, y=z1, a=a1, t=time1, num=num)


fig = plt.figure(figsize=(14,3))
plt.xlim([xu[0],xu[-1]])
plt.ylim([-400,400])
fontsize = 16

plt.axhline(y=0, color='lavender', linestyle='dotted', linewidth=2, alpha=1, zorder=0, label = '_nolegend_')

plt.axvline(x=3000, color='black', linestyle='dashed', linewidth=2, alpha=0.6, zorder=1, label = '_nolegend_')
plt.axvline(x=2000, color='black', linestyle='dashed', linewidth=2, alpha=0.6, zorder=1, label = '_nolegend_')
plt.axvline(x=1000, color='black', linestyle='dashed', linewidth=2, alpha=0.6, zorder=1, label = '_nolegend_')

for i in range(num):
    coef = 1.5
    new_marker_u = marker.transformed(mpl.transforms.Affine2D().rotate_deg(180 + coef*np.rad2deg(a_prime_u[i])))
    new_marker_3 = marker.transformed(mpl.transforms.Affine2D().rotate_deg(180 + coef*np.rad2deg(a_prime_3[i])))
    new_marker_2 = marker.transformed(mpl.transforms.Affine2D().rotate_deg(180 + coef*np.rad2deg(a_prime_2[i])))
    new_marker_1 = marker.transformed(mpl.transforms.Affine2D().rotate_deg(180 + coef*np.rad2deg(a_prime_1[i])))

    plt.scatter(x_prime_u[i], y_prime_u[i], marker=new_marker_u, s=5000, c='lightblue', zorder=3, edgecolor='black', linewidth=1, alpha=1, label = '_nolegend_')
    plt.scatter(x_prime_3[i], y_prime_3[i], marker=new_marker_3, s=5000, c='thistle', zorder=3, edgecolor='black', linewidth=1, alpha=1, label = '_nolegend_')
    plt.scatter(x_prime_2[i], y_prime_2[i], marker=new_marker_2, s=5000, c='lavenderblush', zorder=3, edgecolor='black', linewidth=1, alpha=1, label = '_nolegend_')
    plt.scatter(x_prime_1[i], y_prime_1[i], marker=new_marker_1, s=5000, c='mistyrose', zorder=3, edgecolor='black', linewidth=1, alpha=1, label = '_nolegend_')

plt.plot(xu, zu, c='blue', alpha=1, linewidth=3, zorder=4)
plt.plot(x3, z3, c='blueviolet', alpha=1, linewidth=3, zorder=4)
plt.plot(x2, z2, c='orchid', alpha=1, linewidth=3, zorder=4)
plt.plot(x1, z1, c='crimson', alpha=1, linewidth=3, zorder=4)


plt.xlabel('Horizontal Position (m)', fontsize=fontsize)
plt.ylabel('Altitude (m)', fontsize=fontsize)

plt.xticks(fontsize=fontsize - 2)
plt.yticks(fontsize=fontsize - 2)

plt.text(1000,150,'13.1 MJ',fontsize=fontsize-2,c='black',bbox=dict(facecolor='white',alpha=1,edgecolor='crimson',boxstyle='round'))
plt.text(2000,150,'11.8 MJ',fontsize=fontsize-2,c='black',bbox=dict(facecolor='white',alpha=1,edgecolor='orchid',boxstyle='round'))
plt.text(3000,150,'11.5 MJ',fontsize=fontsize-2,c='black',bbox=dict(facecolor='white',alpha=1,edgecolor='blueviolet',boxstyle='round'))
plt.text(3600,150,'11.4 MJ',fontsize=fontsize-2,c='black',bbox=dict(facecolor='white',alpha=1,edgecolor='blue',boxstyle='round'))



plt.legend(['original', '3 km constraint', '2 km constraint', '1 km constraint'], frameon=False, fontsize=fontsize - 3)

plt.savefig('min_energy_xconstrained.pdf', transparent=True, bbox_inches="tight")
plt.show()